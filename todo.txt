Server side

    –– gmail account doesn't work on production
    –– add function that checks if all .env variables are set before starting the server
    –– races are being saved but user id is null (fetch races would not work)
    –– disallow saving the same races (validate by race date)
    –– cookie doesn't work without binding response manually
    –– reset password logic (db and route)
    –– endpoint for all stats
    –– database migration (manual or automatic)


    Integration tests:
    –– registration (through email somehow => headless chrome and mailinator)
    ―― adding and fetching races
    ―― reset password logic through email

Client side

    –– detailed race stats should not show invalid races if races number is 0
    –– create separate folder for react pages
    –– 'email is not verified' message (on start race route, for example) 
       should offer to resend email
    –– fix fetch races request (it is get now instead of post)
    –– reset cookies on logout
    –– add spinner when user is registration (probably for login too). Use Modal
    ―― reset password page 
    ―― calculate zoom programmaticaly (it is 12 for now)
    ―― rerender map zoom and values on partial values change
    ―― add possibility to cut the race (when viewing the google map path) using mouse
    ―― different units for partial race values
    ―― overall statistics for all races 
        do not download all races at once, but only stuff that is important
        for example, if average run speed is needed, get it from backend directly
    –– download only one race on google map path page (not all races at once)
    –– investigate possible page rerender issue when changing the state
       routes depend on the state (they are connected via redux)

    ―― Integration or e2e tests
    ―― Rethink connectors testing 
        Unit tests are kinda useless.
        Mb it's better to use integration tests instead
Misc
    –– user default exports whenewer possible
    –– remove MESSAGES from core app completely
    ―― find out how to get heroku domain value (in order to pass it to reset password email, etc.)
    ―― database backup using cloud storage (email on failed backup)